{"version":3,"sources":["card.png","abc.png","sort.png","card2.png","search.png","path.png","Body.js","Home.js","Searchpage.js","BubbleSort.js","MergeSort.js","InsertionSort.js","QuickSort.js","Sortingpage.js","Node.jsx","Bfs.js","Dfs.js","Dijkstra.js","Graphpage.jsx","Bcktracking.js","Navbar.js","logo.png","App.js","index.js"],"names":["Body","className","src","path","alt","height","to","style","backgroundColor","sort","card","Home","Searchpage","useState","a","setArr","arr","disable","setDisable","renderarr","map","num","idx","name","data","setData","onInputChange","e","target","value","class","type","disabled","onClick","i","element","Math","ceil","random","console","log","b","window","location","reload","onChange","placeholder","myLoop","pxa","document","getElementsByClassName","setTimeout","textDecoration","alert","s","mid","floor","wloop","axp","letsBubbleSort","myArr","n","animations","extraArray","unsorted","j","k","push","temp","BubbleSort","props","slice","length","MergeSort","array","extraArr","mergeSortHelper","mainArray","l","r","doMerge","letsInsertionSort","key","InsertionSort","letsQuickSort","low","high","pi","pivot","tem","partition","QuickSort","Sortingpage","width","innerWidth","size","bar","firtstIdx","secondIdx","barOneStyle","barTwoStyle","color","newHeight","Node","wallPresent","startNode","endNode","vis","row","col","id","getNodesInShortestPathOrder","finishNode","grid","nodesInShortestPathOrder","node","previousNode","unshift","bfs","num_row","num_col","sRow","sCol","queue","nodes","shift","visNodes","letsDFS","currnode","stack","pop","dfs","updateUnvisitedNeighbors","unvisitedNeighbors","neighbors","filter","neighbor","getUnvisitedNeighbors","distance","dijkstra","remainingNodes","nodeA","nodeB","nearestNode","Infinity","Graphpage","setGrid","innerHeight","max","useEffect","mygrid","getgrid","createNode","renderGrid","row_idx","node_idx","sleep","ms","Promise","resolve","animatePath","Path","getElementById","animateGrid","getNodesInShortestPathOrderDijkstra","newBoard","pairs","xx","yy","Backtrackingpage","Navbar","App","exact","component","ReactDOM","render","StrictMode","basename","process"],"mappings":"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","file":"static/js/main.1faf6add.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/card.370ba8db.png\";","export default __webpack_public_path__ + \"static/media/abc.f8630668.png\";","export default __webpack_public_path__ + \"static/media/sort.239e5502.png\";","export default __webpack_public_path__ + \"static/media/card2.5769cab2.png\";","export default __webpack_public_path__ + \"static/media/search.def0d721.png\";","export default __webpack_public_path__ + \"static/media/path.d26f7f0a.png\";","import React from 'react';\r\nimport card from './card.png'\r\nimport './Body.css';\r\nimport card2 from './card2.png'\r\nimport { Link } from 'react-router-dom';\r\nimport search from './search.png'\r\nimport sort from './sort.png'\r\nimport path from './path.png'\r\n\r\n\r\nconst Body = () => {\r\n    return(\r\n        <div className=\"body\">\r\n  <div className=\"row\">\r\n  <div className=\"col\">\r\n    <div className=\"card\">\r\n  <img src={path} className=\"card-img-top\" alt=\"...\" height=\"200px\" />\r\n  <div className=\"card-body\">\r\n    <h5 className=\"card-title\">Path Finding</h5>\r\n    <p className=\"card-text\">Visualize BFS, DFS & Dijkstra's Algorithm.</p>\r\n    <Link to=\"/graphpage\"><button className=\"btn btn-primary\" style={{backgroundColor:'#3778c2'}}>Let's Visualize!</button></Link>\r\n  </div>\r\n</div>\r\n    </div>\r\n    \r\n    <div className=\"col\">\r\n    <div className=\"card\">\r\n  <img src={sort} className=\"card-img-top\" alt=\"...\" />\r\n  <div className=\"card-body\">\r\n    <h5 className=\"card-title\">Sorting Algorithms</h5>\r\n    <p className=\"card-text\">Sort array using different sorting algorithms.</p>\r\n    <Link to=\"/sortingpage\"><button className=\"btn btn-primary\" style={{backgroundColor:'#3778c2'}}>Let's Visualize!</button></Link>\r\n  </div>\r\n</div>\r\n    </div>\r\n\r\n    <div className=\"col\">\r\n    <div className=\"card\">\r\n  <img src={card} className=\"card-img-top\" alt=\"...\" height=\"200px\" />\r\n  <div className=\"card-body\">\r\n    <h5 className=\"card-title\">Search Methods</h5>\r\n    <p className=\"card-text\">Search an element from array using different methods.</p>\r\n    <Link to=\"/searchpage\"><button className=\"btn btn-primary\" style={{backgroundColor:'#3778c2'}}>Let's Visualize!</button></Link>\r\n  </div>\r\n</div>\r\n    </div>\r\n  </div>\r\n</div>\r\n    );\r\n}\r\n\r\nexport default Body;","import React from 'react';\r\nimport abc from './abc.png'\r\nimport './Home.css'\r\nimport Body from './Body';\r\nconst Home = () => {\r\n    return(\r\n\r\n        <div className=\"home\" >\r\n            <div className=\"home2\">\r\n            <div className=\"centered\">Algorithm Visualizer</div>\r\n            <Body />\r\n            </div>\r\n        </div>\r\n    \r\n    );\r\n}\r\n\r\nexport default Home;","import { findAllByTestId } from '@testing-library/react';\r\nimport React, {useState}  from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport LinearSearch from './Linearsearch';\r\nimport './Searchpage.css'\r\n\r\nconst Searchpage = () => {\r\n    const [a, setArr] = useState([]);\r\n     let arr = [];\r\n     const [disable, setDisable] = useState(false);\r\n    const generatearr = () => {\r\n        for(let i=0; i<16; i++){\r\n            var element = Math.ceil(Math.random() * 100);\r\n            arr[i] = element;\r\n            console.log(arr[i]);\r\n        }\r\n        arr.sort(function (a, b) {\r\n            return a - b;\r\n          });\r\n        setArr([...a, ...arr]);\r\n        setDisable(true)\r\n    }\r\n    \r\n    const renderarr = a.map((num , idx) => {\r\n        \r\n        return(\r\n            <div className=\"container\">\r\n            <div className=\"arr\" key={idx}>\r\n                {num}\r\n            </div>   \r\n            </div>\r\n            \r\n        );\r\n    }\r\n    );\r\n    // const [val , setValue] = useState();\r\n    const [data, setData] = useState({name: 0});\r\n//the create an onInputChange function for the Inputs this way\r\nconst onInputChange = async e =>{\r\n  const {name, value} = e.target;\r\n  //check to validate if entry is not a number\r\n    data[name] = value;\r\n    //somehow update data\r\n    setData({...data})\r\n    \r\n}\r\n    \r\n    const linear = () => {\r\n        var i=0;\r\n        function myLoop() {\r\n            const axp = document.getElementsByClassName('arr');\r\n            const pxa = axp[i].style;\r\n            setTimeout(function(){\r\n                if(a[i] == data.name){\r\n                    console.log(\"yes\");\r\n                    pxa.backgroundColor = '#bce563';\r\n                    return;\r\n                }\r\n                else{\r\n                    pxa.backgroundColor = '#e58c63';\r\n                    pxa.textDecoration = \"line-through\";\r\n                    if(i<15){\r\n                        i++;\r\n                        myLoop();\r\n                    }\r\n                    else{\r\n                        alert(\"Number not found\");\r\n                    }\r\n                }\r\n            }, 300)\r\n            \r\n        }\r\n        myLoop();\r\n        console.log(\"no\");\r\n    }\r\n    const binary = () => {\r\n        var s=0;\r\n        var e=15;\r\n        var mid = Math.floor((s+e)/2);\r\n        function wloop() {\r\n            const axp = document.getElementsByClassName('arr');\r\n            const pxa = axp[mid].style;\r\n            pxa.backgroundColor = 'yellow';\r\n            setTimeout(() => {\r\n                if(a[mid] == data.name){\r\n                    pxa.backgroundColor = '#bce563';\r\n                    return;\r\n                }\r\n                else if(a[mid] > data.name){\r\n                    for(let i=mid+1; i<=e; i++){\r\n                        axp[i].style.backgroundColor = '#e58c63';\r\n                        axp[i].style.textDecoration = \"line-through\";\r\n                    }\r\n                    e= mid-1;\r\n                    mid = (s+e)/2;\r\n                    \r\n                }\r\n                else if(a[mid] < data.name){\r\n                    for(let i=s; i<mid; i++){\r\n                        axp[i].style.backgroundColor = '#e58c63';\r\n                        axp[i].style.textDecoration = \"line-through\";\r\n                    }\r\n                    s= mid+1;\r\n                    mid = Math.floor((s+e)/2);\r\n                    \r\n                }\r\n                if(s<=e){\r\n                    wloop();\r\n                }\r\n                else{\r\n                    alert(\"Number not found\");\r\n                }\r\n            }, 1000)\r\n        }\r\n        wloop();\r\n    }\r\n    \r\n    return(\r\n        <div className=\"Searchpage\">\r\n            <div className=\"buttons\">\r\n            <button class=\"btn btn-lg btn-primary\" type=\"button\" disabled={disable} onClick={generatearr} style={{backgroundColor:'#63e5cd'}}>Generate Array!</button>\r\n            <button type=\"button\" class=\"btn btn-secondary btn-lg\" onClick={() => window.location.reload(false)} style={{backgroundColor:'#e563bc'}}>Reset</button>\r\n            </div>\r\n            <div className=\"co\">\r\n                {renderarr}\r\n                \r\n            </div> \r\n            <div class=\"d-grid gap-2 col-6 mx-auto\">\r\n                \r\n                <p className=\"enter\">Search Number</p>\r\n                <input type=\"number\" name=\"name\" className=\"inputnum\" onChange={onInputChange} placeholder=\"Enter a number to search\"/>\r\n              <button class=\"btn btn-primary\" type=\"button\" onClick={linear} style={{backgroundColor:'#3778c2'}}>Linear Search</button>\r\n              <button class=\"btn btn-primary\" type=\"button\" onClick={binary} style={{backgroundColor:'#3778c2'}}>Binary Search</button>\r\n             </div>\r\n            \r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default Searchpage;","import React from \"react\";\r\n\r\nconst BubbleSort = (props) => {\r\n    const animations = [];\r\n    const extraArray = props.slice();\r\n    letsBubbleSort(props, props.length, animations, extraArray);\r\n    console.log(extraArray);\r\n    return animations;\r\n}\r\n\r\nconst letsBubbleSort = (myArr, n, animations, extraArray) => {\r\n    var unsorted = false;\r\n    for(let a=0; a<n-1; a++){\r\n        let e = n-a-1;\r\n        for(let j=0; j<e; j++){\r\n            let k=j+1;\r\n            animations.push([j, k]);\r\n            animations.push([j, k]);\r\n            if(extraArray[j] > extraArray[j+1]){\r\n                animations.push([j, extraArray[j+1]]);\r\n                animations.push([j+1, extraArray[j]]);\r\n                const temp = extraArray[j];\r\n                extraArray[j] = extraArray[j+1];\r\n                extraArray[j+1] = temp;\r\n                \r\n                unsorted = true;\r\n            }\r\n            else{\r\n                animations.push([-1, -1]);\r\n                animations.push([-1, -1]);\r\n            }\r\n        }\r\n        if(unsorted == false){\r\n            break;\r\n        }\r\n    }\r\n} \r\n\r\nexport default BubbleSort;","export function MergeSort(array) {\r\n    const animations = [];\r\n    if (array.length <= 1) return array;\r\n    const extraArr = array.slice();\r\n    mergeSortHelper(array, 0, array.length - 1, extraArr, animations);\r\n    return animations;\r\n  }\r\n  \r\n  function mergeSortHelper(mainArray,l,r,extraArr,animations) {\r\n    if (l === r) return;\r\n    const mid = Math.floor((l + r) / 2);\r\n    mergeSortHelper(extraArr, l, mid, mainArray, animations);\r\n    mergeSortHelper(extraArr, mid + 1, r, mainArray, animations);\r\n    doMerge(mainArray, l, mid, r, extraArr, animations);\r\n  }\r\n  \r\n  function doMerge(mainArray,l,mid,r,extraArr,animations) {\r\n    let k = l;\r\n    let i = l;\r\n    let j = mid + 1;\r\n    while (i <= mid && j <= r) {\r\n      animations.push([i, j]);\r\n      animations.push([i, j]);\r\n      if (extraArr[i] <= extraArr[j]) {\r\n        animations.push([k, extraArr[i]]);\r\n        mainArray[k++] = extraArr[i++];\r\n      } else {\r\n        animations.push([k, extraArr[j]]);\r\n        mainArray[k++] = extraArr[j++];\r\n      }\r\n    }\r\n    while (i <= mid) {\r\n      animations.push([i, i]);\r\n      animations.push([i, i]);\r\n      animations.push([k, extraArr[i]]);\r\n      mainArray[k++] = extraArr[i++];\r\n    }\r\n    while (j <= r) {\r\n      animations.push([j, j]);\r\n      animations.push([j, j]);\r\n      animations.push([k, extraArr[j]]);\r\n      mainArray[k++] = extraArr[j++];\r\n    }\r\n  }","import React from \"react\";\r\n\r\nconst InsertionSort = (props) => {\r\n    const animations = [];\r\n    const extraArray = props.slice();\r\n    letsInsertionSort(props, props.length, animations, extraArray);\r\n    console.log(props);\r\n    return animations;\r\n}\r\n\r\nconst letsInsertionSort = (myArr, n, animations, extraArray) =>{\r\n    var i, key, j;\r\n    for(i=1; i<n; i++){\r\n        key = myArr[i];\r\n        j=i-1;\r\n        while (j >= 0 && myArr[j] > key)\r\n        {\r\n            animations.push([i, j]);\r\n            animations.push([i, j]);\r\n            animations.push([j, myArr[j+1]]);\r\n            animations.push([j+1, myArr[j]]);\r\n            myArr[j + 1] = myArr[j];\r\n            //animations.push([j, myArr[j]]);\r\n            j = j - 1;\r\n            //animations.push([j+1, myArr[j+1]]);\r\n        }\r\n        myArr[j + 1] = key;\r\n        animations.push([i, j+1]);\r\n        animations.push([i, j+1]);\r\n        animations.push([j+1, key]);\r\n        animations.push([j+1, key]);\r\n    }\r\n}\r\nexport default InsertionSort;","import React from \"react\";\r\n\r\nconst animations = [];\r\n\r\nconst QuickSort = (props) => {\r\n    console.log(props);\r\n    letsQuickSort(props, 0, props.length-1);\r\n    console.log(props);\r\n    return animations;\r\n}\r\nfunction partition(arr, low, high){\r\n    const pivot = arr[high];\r\n    var i = low-1;\r\n    for (let j = low; j <= high - 1; j++){\r\n        if (arr[j] < pivot){\r\n            i++;\r\n            animations.push([j, i]);\r\n            animations.push([j, i]);\r\n            var temp = arr[i];\r\n            arr[i] = arr[j];\r\n            arr[j] = temp;\r\n            animations.push([j, arr[j]]);\r\n            animations.push([j, i]);\r\n            animations.push([j, i]);\r\n            animations.push([i, arr[i]]);\r\n        }\r\n    }\r\n            var tem = arr[i+1];\r\n            arr[i+1] = arr[high];\r\n            arr[high] = tem;\r\n            animations.push([i+1, high]);\r\n            animations.push([i+1, high]);\r\n            animations.push([i+1, arr[i+1]]);\r\n            animations.push([i+1, high]);\r\n            animations.push([i+1, high]);\r\n            animations.push([high, arr[high]]);\r\n            return i+1;\r\n}\r\nfunction letsQuickSort(arr, low, high){\r\n    if(low<high){\r\n        const pi = partition(arr, low, high);\r\n        letsQuickSort(arr, low, pi-1);\r\n        letsQuickSort(arr, pi+1, high);\r\n    }\r\n}\r\nexport default QuickSort;","import React, {useState} from 'react';\r\nimport './Sortingpage.css'\r\nimport BubbleSort from './BubbleSort';\r\nimport SelectionSort from './SelectionSort';\r\nimport { MergeSort } from './MergeSort';\r\nimport InsertionSort from './InsertionSort';\r\nimport QuickSort from './QuickSort';\r\n\r\nconst Sortingpage = () => {\r\n    const [a, setArr] = useState([]);\r\n     let arr = [];\r\n     const [disable, setDisable] = useState(false);\r\n     const width = window.innerWidth;\r\n     const size = Math.floor(width/12);\r\n     console.log(size);\r\n    const generatearr = () => {\r\n        for(let i=0; i<size; i++){\r\n            var element = Math.ceil(Math.random() * 400);\r\n            arr[i] = element;\r\n        }\r\n        setArr([...a, ...arr]);\r\n            setDisable(true)\r\n    }\r\n\r\n    const renderarr = a.map((num , idx) => {\r\n        \r\n        return(\r\n            <div className=\"container\">\r\n            <div className=\"bars\" key={idx} style={{height: `${num}px`}}>\r\n                \r\n            </div>   \r\n            </div>\r\n            \r\n        );\r\n    }\r\n    );\r\n\r\n    const mergefunc = () => {\r\n        const animations = MergeSort(a);\r\n        for (let i = 0; i < animations.length; i++){\r\n            const bar = document.getElementsByClassName('bars');\r\n            const change = i%3 !== 2;\r\n            if(change){\r\n                const [firtstIdx, secondIdx] = animations[i];\r\n                const secondaryColor = 'yellow';\r\n                const primaryColor = '#63bce5';\r\n                const barOneStyle = bar[firtstIdx].style;\r\n                const barTwoStyle = bar[secondIdx].style;\r\n                const color = i % 3 === 0 ? secondaryColor : primaryColor;\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = color;\r\n                    barTwoStyle.backgroundColor = color;\r\n                  }, i * 2);\r\n            }\r\n            else{\r\n                setTimeout(() => {\r\n                    const [firtstIdx, newHeight] = animations[i];\r\n                    const barOneStyle = bar[firtstIdx].style;\r\n                    barOneStyle.height = `${newHeight}px`;\r\n\r\n                }, i * 2);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const bubbleSortfunc = () => {\r\n       const animations = BubbleSort(a);\r\n       for (let i = 0; i < animations.length; i++){\r\n        const bar = document.getElementsByClassName('bars');\r\n        const change = (i%4 === 0) || (i%4 === 1);\r\n        if(change){\r\n            const [firtstIdx, secondIdx] = animations[i];\r\n            const secondaryColor = 'yellow';\r\n            const primaryColor = '#63bce5';\r\n            const barOneStyle = bar[firtstIdx].style;\r\n            const barTwoStyle = bar[secondIdx].style;\r\n            const color = i % 4 === 0 ? secondaryColor : primaryColor;\r\n            setTimeout(() => {\r\n                barOneStyle.backgroundColor = color;\r\n                barTwoStyle.backgroundColor = color;\r\n              }, i * 1);\r\n        }\r\n        else{\r\n            const [firtstIdx, newHeight] = animations[i];\r\n                if(firtstIdx === -1){\r\n                    continue;\r\n                }\r\n            setTimeout(() => {\r\n                const barOneStyle = bar[firtstIdx].style;\r\n                barOneStyle.height = `${newHeight}px`;\r\n            }, i * 1);\r\n        }\r\n    }\r\n    }\r\n\r\n    const Selectionfunc = () => {\r\n        const animations = SelectionSort(a);\r\n        for (let i = 0; i < animations.length; i++){\r\n            const bar = document.getElementsByClassName('bars');\r\n            const change = (i%4 === 0) || (i%4 === 1);\r\n            if(change){\r\n                const [firtstIdx, secondIdx] = animations[i];\r\n                const secondaryColor = 'yellow';\r\n                const primaryColor = '#63bce5';\r\n                const barOneStyle = bar[firtstIdx].style;\r\n                const barTwoStyle = bar[secondIdx].style;\r\n                const color = i % 4 === 0 ? secondaryColor : primaryColor;\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = color;\r\n                    barTwoStyle.backgroundColor = color;\r\n                  }, i * 1);\r\n            }\r\n            else{\r\n                const [firtstIdx, newHeight] = animations[i];\r\n                    if(firtstIdx === -1){\r\n                        continue;\r\n                    }\r\n                setTimeout(() => {\r\n                    const barOneStyle = bar[firtstIdx].style;\r\n                    barOneStyle.height = `${newHeight}px`;\r\n                }, i * 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    const Quickfunc = () => {\r\n        const animations = QuickSort(a);\r\n\r\n        for (let i = 0; i < animations.length; i++){\r\n            const bar = document.getElementsByClassName('bars');\r\n            const change = i%3 !== 2;\r\n            if(change){\r\n                const [firtstIdx, secondIdx] = animations[i];\r\n                const secondaryColor = 'yellow';\r\n                const primaryColor = '#63bce5';\r\n                const barOneStyle = bar[firtstIdx].style;\r\n                const barTwoStyle = bar[secondIdx].style;\r\n                const color = i % 3 === 0 ? secondaryColor : primaryColor;\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = color;\r\n                    barTwoStyle.backgroundColor = color;\r\n                  }, i * 5);\r\n            }\r\n            else{\r\n                setTimeout(() => {\r\n                    const [firtstIdx, newHeight] = animations[i];\r\n                    const barOneStyle = bar[firtstIdx].style;\r\n                    barOneStyle.height = `${newHeight}px`;\r\n\r\n                }, i * 5);\r\n            }\r\n        }\r\n    }\r\n\r\n    const Insertionfunc = () => {\r\n        const animations = InsertionSort(a);\r\n        for (let i = 0; i < animations.length; i++){\r\n            const bar = document.getElementsByClassName('bars');\r\n            const change = (i%4 === 0) || (i%4 === 1);\r\n            if(change){\r\n                const [firtstIdx, secondIdx] = animations[i];\r\n                const secondaryColor = 'yellow';\r\n                const primaryColor = '#63bce5';\r\n                const barOneStyle = bar[firtstIdx].style;\r\n                const barTwoStyle = bar[secondIdx].style;\r\n                const color = i % 4 === 0 ? secondaryColor : primaryColor;\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = color;\r\n                    barTwoStyle.backgroundColor = color;\r\n                  }, i * 1);\r\n            }\r\n            else{\r\n                const [firtstIdx, newHeight] = animations[i];\r\n                    if(firtstIdx === -1){\r\n                        continue;\r\n                    }\r\n                setTimeout(() => {\r\n                    const barOneStyle = bar[firtstIdx].style;\r\n                    barOneStyle.height = `${newHeight}px`;\r\n                }, i * 1);\r\n            }\r\n        }\r\n    }\r\n    return(\r\n        <div className=\"sortingpage\">\r\n            <h1 className=\"heading\">Sorting Visualiser</h1>\r\n            <div>{renderarr}</div>\r\n            <div className=\"mybtns\">\r\n            <button type=\"button\" class=\"btn btn-outline-primary\" onClick={mergefunc}>Merge Sort</button>\r\n            <button type=\"button\" class=\"btn btn-outline-secondary\" onClick={bubbleSortfunc}>Bubble Sort</button>\r\n            {/* <button type=\"button\" class=\"btn btn-outline-success\" onClick={Selectionfunc}>Selection Sort</button> */}\r\n            <button type=\"button\" class=\"btn btn-outline-danger\" onClick={Insertionfunc}>Insertion Sort</button>\r\n            <button type=\"button\" class=\"btn btn-outline-warning\" onClick={Quickfunc}>Quick Sort</button>\r\n            <button type=\"button\" class=\"btn btn-outline-info\" onClick={() => window.location.reload(false)}>RESET</button>\r\n            {/* <button type=\"button\" class=\"btn btn-outline-light\">Light</button> */}\r\n            <button type=\"button\" class=\"btn btn-outline-dark\"  disabled={disable} onClick={generatearr}>Generate Array!</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sortingpage;","import React from \"react\";\r\nimport './Node.css'\r\n\r\nconst Node = (props) => {\r\n    const {wallPresent, startNode, endNode, vis, row, col} = props;\r\n    \r\n    const decideClass = () => {\r\n        if(wallPresent===true){\r\n            return \"node wall\";\r\n        }\r\n        else if(startNode===true){\r\n            return \"node start\";\r\n        }\r\n        else if(endNode===true){\r\n            return \"node end\";\r\n        }\r\n        else if(vis===true){\r\n            return \"node vis\";\r\n        }\r\n        else{\r\n            return \"node\";\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div id={`node ${row}-${col}`} className={decideClass()} >\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Node;","import React from \"react\";\r\n\r\nfunction bfs (grid, startNode, endNode, num_row, num_col){\r\n    const sRow = startNode.row;\r\n    const eRow = endNode.row;\r\n    const sCol = startNode.col;\r\n    const eCol = endNode.col;\r\n    const queue = [];\r\n    const nodes=[]\r\n    queue.push(startNode);\r\n    grid[sRow][sCol].vis = true;\r\n    //var min_dis = Infinity;\r\n    while(!!queue.length){\r\n        const node = queue[0];\r\n       // grid[node.row][node.col].vis = true;\r\n     //  node.vis=true;\r\n       // node.distance = 1;\r\n        queue.shift();\r\n        nodes.push(node);\r\n       // console.log(node);\r\n        if(node.endNode == true){\r\n            //console.log(nodes);\r\n            return nodes;\r\n        }\r\n        if(node.col<(num_col - 1) && grid[node.row][node.col +1].vis == false && grid[node.row][node.col +1].wallPresent==false){\r\n            grid[node.row][node.col +1].vis = true;\r\n            grid[node.row][node.col +1].previousNode = node;\r\n            queue.push(grid[node.row][node.col +1]);\r\n        }\r\n        if(node.row<(num_row - 1) && grid[node.row +1][node.col].vis == false && grid[node.row + 1][node.col].wallPresent==false){\r\n            queue.push(grid[node.row +1][node.col]);\r\n            grid[node.row +1][node.col].vis = true;\r\n            grid[node.row +1][node.col].previousNode=node;\r\n        }\r\n        if(node.row>0 && grid[node.row -1][node.col].vis == false && grid[node.row - 1][node.col].wallPresent==false){\r\n            queue.push(grid[node.row -1][node.col]);\r\n            grid[node.row -1][node.col].vis = true;\r\n            grid[node.row -1][node.col].previousNode=node;\r\n        }\r\n        if(node.col>0 && grid[node.row][node.col -1].vis == false && grid[node.row][node.col - 1].wallPresent==false){\r\n            queue.push(grid[node.row][node.col -1]);\r\n            grid[node.row][node.col -1].vis = true;\r\n            grid[node.row][node.col -1].previousNode=node;\r\n        }\r\n    }\r\n    //startNode.vis = true;\r\n    return nodes;\r\n}\r\n\r\nexport function getNodesInShortestPathOrder(finishNode, grid, startNode) {\r\n    const nodesInShortestPathOrder = [];\r\n    let node = grid[finishNode.row][finishNode.col];\r\n    //console.log(grid);\r\n    while (node !== startNode.previousNode) {\r\n        console.log(node);\r\n      nodesInShortestPathOrder.unshift(node);\r\n      node = node.previousNode;\r\n      \r\n    }\r\n    return nodesInShortestPathOrder;\r\n  }\r\n\r\nexport default bfs;","import React from \"react\";\r\n\r\nconst visNodes = [];\r\nfunction dfs (grid, startNode, endNode, num_row, num_col){\r\n    letsDFS(startNode, grid, num_row, num_col);\r\n    return visNodes;\r\n}\r\n\r\nconst letsDFS = (currnode, grid, num_row, num_col) =>{\r\n    // if(currnode.endNode === true){\r\n    //     console.log(\"Yes\")\r\n    //     console.log(currnode)\r\n    //     return;\r\n    // }\r\n    const stack = [];\r\n    stack.push(currnode);\r\n\r\n    while(!!stack.length){\r\n    const node = stack.pop();\r\n\r\n    if(node.endNode == true){\r\n        return visNodes;\r\n    }\r\n    \r\n    grid[node.row][node.col].vis = true;\r\n    visNodes.push(grid[node.row][node.col]);\r\n\r\n    if(node.col>0 && grid[node.row][node.col -1].vis == false && grid[node.row][node.col - 1].wallPresent==false){\r\n        grid[node.row][node.col -1].previousNode=node;\r\n        stack.push(grid[node.row][node.col -1]);\r\n        //letsDFS(grid[node.row][node.col -1], grid, num_row, num_col);\r\n    }\r\n    if(node.row>0 && grid[node.row -1][node.col].vis == false && grid[node.row - 1][node.col].wallPresent==false){\r\n        grid[node.row -1][node.col].previousNode=node;\r\n        stack.push(grid[node.row -1][node.col]);\r\n        //letsDFS(grid[node.row -1][node.col], grid, num_row, num_col);\r\n    }\r\n    if(node.row<(num_row - 1) && grid[node.row +1][node.col].vis == false && grid[node.row + 1][node.col].wallPresent==false){\r\n        grid[node.row +1][node.col].previousNode=node;\r\n        stack.push(grid[node.row +1][node.col]);\r\n        //letsDFS(grid[node.row +1][node.col], grid, num_row, num_col);\r\n    }\r\n    if(node.col<(num_col - 1) && grid[node.row][node.col +1].vis == false && grid[node.row][node.col +1].wallPresent==false){\r\n        grid[node.row][node.col +1].previousNode = node;\r\n        stack.push(grid[node.row][node.col +1]);\r\n        //letsDFS(grid[node.row][node.col +1], grid, num_row, num_col);\r\n    }\r\n    else;\r\n }\r\n}\r\n\r\nexport function getNodesInShortestPathOrderdfs(finishNode, grid, startNode) {\r\n    const nodesInShortestPathOrder = [];\r\n    let node = grid[finishNode.row][finishNode.col];\r\n    //console.log(grid);\r\n    while (node !== startNode.previousNode) {\r\n        console.log(node);\r\n      nodesInShortestPathOrder.unshift(node);\r\n      node = node.previousNode;\r\n    }\r\n    return nodesInShortestPathOrder;\r\n  }\r\n\r\nexport default dfs;","import React from \"react\";\r\n\r\nconst dijkstra = (grid, startNode, endNode, num_row, num_col) => {\r\n    const animations = [];\r\n    grid[startNode.row][startNode.col].distance = 0;\r\n    const remainingNodes = [];\r\n    for (const row of grid) {\r\n        for (const node of row) {\r\n          remainingNodes.push(node);\r\n        }\r\n      }\r\n\r\n    while(!!remainingNodes.length){\r\n        remainingNodes.sort((nodeA, nodeB) => nodeA.distance - nodeB.distance);\r\n        \r\n        const nearestNode = remainingNodes.shift();\r\n       // console.log(nearestNode);\r\n        if(nearestNode.wallPresent == true){\r\n            continue;\r\n        }\r\n        if(nearestNode.distance == Infinity){\r\n            return animations;\r\n        }\r\n\r\n        nearestNode.vis = true;\r\n        animations.push(nearestNode);\r\n        if(nearestNode.endNode == true){\r\n            return animations;\r\n        }\r\n        updateUnvisitedNeighbors(nearestNode, grid);\r\n    }\r\n    return animations;\r\n}\r\n\r\nfunction updateUnvisitedNeighbors(node, grid) {\r\n    const unvisitedNeighbors = getUnvisitedNeighbors(node, grid);\r\n    for (const neighbor of unvisitedNeighbors) {\r\n      neighbor.distance = node.distance + 1;\r\n      neighbor.previousNode = node;\r\n     \r\n    }\r\n  }\r\n  \r\n  function getUnvisitedNeighbors(node, grid) {\r\n    const neighbors = [];\r\n    const {col, row} = node;\r\n    if (row > 0) neighbors.push(grid[row - 1][col]);\r\n    if (row < grid.length - 1) neighbors.push(grid[row + 1][col]);\r\n    if (col > 0) neighbors.push(grid[row][col - 1]);\r\n    if (col < grid[0].length - 1) neighbors.push(grid[row][col + 1]);\r\n    return neighbors.filter(neighbor => !neighbor.vis);\r\n  }\r\n\r\n  export function getNodesInShortestPathOrderDijkstra(finishNode, grid, startNode) {\r\n    const nodesInShortestPathOrder = [];\r\n    let node = grid[finishNode.row][finishNode.col];\r\n    //console.log(grid);\r\n    while (node !== null) {\r\n        console.log(node);\r\n      nodesInShortestPathOrder.unshift(node);\r\n      node = node.previousNode;\r\n      \r\n    }\r\n    return nodesInShortestPathOrder;\r\n  }\r\n\r\nexport default dijkstra;","import React, {useState, useEffect} from 'react';\r\nimport Node from './Node'\r\nimport './Graphpage.css'\r\nimport bfs from './Bfs';\r\nimport { getNodesInShortestPathOrder } from './Bfs';\r\nimport dfs from './Dfs';\r\nimport { getNodesInShortestPathOrderdfs } from './Dfs';\r\nimport dijkstra from './Dijkstra';\r\nimport { getNodesInShortestPathOrderDijkstra } from './Dijkstra';\r\n\r\nconst Graphpage = () => {\r\n    const [grid, setGrid] = useState([]);\r\n    // const [disableBFS, setDisableBFS] = useState(false);\r\n    // const [disableDFS, setDisableDFS] = useState(false);\r\n    // const [disableDijk, setDisableDijk] = useState(false);\r\n    // const [disableMaze, setDisableMaze] = useState(false);\r\n    const width = window.innerWidth;\r\n        const height = window.innerHeight;\r\n        const num_row = Math.max(Math.floor(height/25),10);\r\n        const num_col = Math.floor(width/25) -1;\r\n        const startNode = {\r\n            row:4,\r\n            col:4\r\n        };\r\n        const endNode = {\r\n            row: num_row-5,\r\n            col: num_col-5\r\n        }\r\n    useEffect(() => {\r\n        const mygrid = getgrid(num_row, num_col);\r\n        mygrid[startNode.row][startNode.col].startNode=true;\r\n        mygrid[num_row-5][num_col-5].endNode=true;\r\n        setGrid([...grid, ...mygrid]);\r\n        return () => {\r\n            \r\n        }\r\n    }, [])\r\n    \r\n        const createNode = (row, col) => {\r\n            return(\r\n                {wallPresent:false,\r\n                    startNode:false,\r\n                    endNode:false,\r\n                    vis:false,\r\n                    row,\r\n                    col,\r\n                    distance:Infinity,\r\n                    previousNode:null\r\n                }\r\n            )\r\n        }\r\n    const getgrid = (num_row, num_col) => {\r\n        const grid = [];\r\n        for(let i=0; i<num_row; i++){\r\n            const row=[];\r\n            for(let j=0; j<num_col; j++){\r\n                row.push(createNode(i, j));\r\n            }\r\n            grid.push(row);\r\n        }\r\n        return grid;\r\n    }\r\n    \r\n    const renderGrid = grid.map((row, row_idx)=>{\r\n        return(\r\n            <div className=\"row\">\r\n               { row.map((node, node_idx)=>{\r\n    \r\n                   const {wallPresent, startNode, endNode, vis, row, col} = node;\r\n                    return(\r\n                        // <div className=\"nodes\">\r\n                        //     <Node />\r\n                        // </div>\r\n                        <Node\r\n                        row={row}\r\n                        col={col}\r\n                        key={node_idx}\r\n                        wallPresent={wallPresent}\r\n                        startNode={startNode}\r\n                        endNode={endNode}\r\n                        vis={vis} \r\n                         />\r\n                    )\r\n                })\r\n            }\r\n            </div>\r\n        )\r\n    })\r\n\r\n    const createMaze = () => {\r\n  //  console.log(\"Heyya\")\r\n    let newBoard = grid.slice();\r\n    const pairs = [];\r\n    for(let i = 0;i<num_row;i++){\r\n        for( let j = 0;j <num_col;j++){\r\n            const random = Math.floor(Math.random()*100)+10;\r\n            if( random%4 === 0 ){\r\n                newBoard[i][j].wallPresent = true;\r\n                pairs.push({\r\n                    xx:i,\r\n                    yy:j\r\n                });\r\n            }\r\n        }\r\n       // setDisableMaze(true)\r\n    }\r\n    \r\n    for( let i = 0;i<pairs.length;i++ ){\r\n        setTimeout(() => {\r\n            if((pairs[i].xx!==startNode.row || pairs[i].yy!==startNode.col) && (pairs[i].xx!==endNode.row || pairs[i].yy!==endNode.col) ){\r\n                const a = document.getElementById(`node ${pairs[i].xx}-${pairs[i].yy}`);\r\n                a.className = \"node wall\";\r\n             }\r\n        }, i*20);\r\n    }\r\n    \r\n    return pairs;\r\n    }\r\n\r\n    const callBFS = () => {\r\n        const animations = bfs(grid, startNode, endNode, num_row, num_col);\r\n        const bfsPath = getNodesInShortestPathOrder(endNode, grid, startNode);\r\n        animateGrid(bfsPath, animations);\r\n        //setDisableBFS(true)\r\n    }\r\n\r\n    function sleep(ms) {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n\r\n    async function animatePath(Path, animations){\r\n       // console.log(Path.length);\r\n        for(let j=0; j<Path.length; j++){\r\n            //console.log(Path[j]);\r\n           // setTimeout(() => {\r\n                if((Path[j].row!==startNode.row || Path[j].col!==startNode.col) && (Path[j].row!==endNode.row || Path[j].col!==endNode.col) ){\r\n                    const a = document.getElementById(`node ${Path[j].row}-${Path[j].col}`);\r\n                    //console.log(a);\r\n                    a.className = \"node path\";\r\n                    await sleep(100);\r\n                 }\r\n           // }, j*50);\r\n        }\r\n    }\r\n\r\n    async function animateGrid(Path, animations) {\r\n        for(let i=0; i<=animations.length; i++){\r\n            if(i === animations.length){\r\n                await sleep(500);\r\n                await animatePath(Path, animations);\r\n                return;\r\n            }\r\n           // setTimeout(() => {\r\n                if((animations[i].row!==startNode.row || animations[i].col!==startNode.col) && (animations[i].row!==endNode.row || animations[i].col!==endNode.col) ){\r\n                    const a = document.getElementById(`node ${animations[i].row}-${animations[i].col}`);\r\n                    //console.log(a);\r\n                    a.className = \"node vis\";\r\n                    await sleep(50);\r\n                 }\r\n           // }, i*1);\r\n        }\r\n    }\r\n\r\n    function callDFS (){\r\n        const animations = dfs(grid, startNode, endNode, num_row, num_col);\r\n        const dfsPath = getNodesInShortestPathOrder(endNode, grid, startNode);\r\n        animateGrid(dfsPath, animations);\r\n        //setDisableDFS(true)\r\n    }\r\n\r\n    function callDijsktra(){\r\n        const animations = dijkstra(grid, startNode, endNode, num_row, num_col);\r\n        console.log(animations);\r\n        const dijkPath = getNodesInShortestPathOrderDijkstra(endNode, grid, startNode);\r\n        animateGrid(dijkPath, animations);\r\n        //setDisableDijk(true)\r\n    }\r\n    return(\r\n        <div className=\"containerrr\">\r\n         {renderGrid}\r\n         <div className=\"container\">\r\n         <button type=\"button\" class=\"btn btn-outline-primary\" onClick={callBFS}>BFS</button>\r\n         <button type=\"button\" class=\"btn btn-outline-secondary\" onClick={callDFS}>DFS</button>\r\n<button type=\"button\" class=\"btn btn-outline-success\" onClick={callDijsktra}>Dijkstra</button>\r\n<button type=\"button\" class=\"btn btn-outline-info\" onClick={() => window.location.reload(false)}>Clear Grid</button>\r\n<button type=\"button\" class=\"btn btn-outline-danger\" onClick={createMaze}>Create Maze</button>\r\n         </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Graphpage;","import React from 'react';\r\n\r\nconst Backtrackingpage = () => {\r\n    return(\r\n        <div className=\"backtrackingpage\">\r\n            <h1>Backtrackingpage</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Backtrackingpage;","import React from 'react'\r\nimport './Navbar.css'\r\nimport logo from './logo.png' \r\nimport { Link } from 'react-router-dom';\r\nconst Navbar = () => {\r\n    return(\r\n      <div className=\"nv\">\r\n          <nav class=\"navbar navbar-light\" style={{backgroundColor: '#3778c2'}}>\r\n          \r\n  <div class=\"container-fluid\">\r\n  <Link to=\"/\"><a class=\"navbar-brand\" style={{color:'white'}}>Home</a></Link>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n      <ul class=\"navbar-nav\">\r\n        <li class=\"nav-item\">\r\n    \r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</nav>\r\n</div>\r\n    );\r\n}\r\n\r\nexport default Navbar;","export default __webpack_public_path__ + \"static/media/logo.9f4d4b44.png\";","import Home from \"./Home\";\r\n//BrowserRouter basename={process.env.PUBLIC_URL}\r\n//import {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport { Route, Switch, Link } from \"react-router-dom\";\r\nimport Body from \"./Body\";\r\nimport './App.css'\r\nimport Searchpage from './Searchpage';\r\nimport Sortingpage from \"./Sortingpage\";\r\nimport Graphpage from \"./Graphpage\";\r\nimport Backtrackingpage from \"./Bcktracking\";\r\nimport Navbar from \"./Navbar\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"container-fluid\">\r\n    <div className=\"App\">\r\n        <Navbar />\r\n        <Switch>\r\n           <Route path=\"/\" exact component={Home} />\r\n           <Route path=\"/searchpage\" exact component={Searchpage} />\r\n           <Route path=\"/sortingpage\" exact component={Sortingpage} />\r\n           <Route path=\"/graphpage\" exact component={Graphpage} />\r\n           <Route path=\"/backtrackingpage\" exact component={Backtrackingpage} />\r\n        </Switch>\r\n      \r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter basename={process.env.PUBLIC_URL}>\r\n    <App />\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}